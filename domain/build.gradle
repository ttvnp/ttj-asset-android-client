apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    def globalConfiguration = rootProject.ext

    compileSdkVersion globalConfiguration.androidCompileSdkVersion
    buildToolsVersion globalConfiguration.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion globalConfiguration.androidMinSdkVersion
        targetSdkVersion globalConfiguration.androidTargetSdkVersion
        versionCode globalConfiguration.dataLibraryVersionCode
        versionName globalConfiguration.dataLibraryVersionName
        testInstrumentationRunner globalConfiguration.testInstrumentationRunner
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {

    // Compile
    def compileTimeDependencies = rootProject.ext.compileTimeDependencies
    kapt compileTimeDependencies.daggerCompiler
    kapt compileTimeDependencies.daggerAndroidProcessor
    compileOnly compileTimeDependencies.javaxAnnotation
    compileOnly compileTimeDependencies.javaxInject

    // Common
    def commonDependencies = rootProject.ext.commonDependencies
    for (dependency in commonDependencies){
        implementation dependency.value
    }

    // Domain
    def domainDependencies = rootProject.ext.domainDependencies
    for (dependency in domainDependencies){
        implementation dependency.value
    }

    // Test
    def testDependencies = rootProject.ext.testDependencies
    for (dependency in testDependencies){
        testImplementation dependency.value
    }
}
